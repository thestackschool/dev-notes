{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to My Tech Notes</p> <p><code>visit website:</code> Quick Reference <code>https://thestackschool.github.io/dev-notes/</code></p> <p><code>Github:</code> Click Here</p>"},{"location":"#commandline-tools","title":"CommandLine Tools","text":"<ul> <li>Babun - a Windows shell you will love!.</li> <li>iTerms2 - iTerm2 is a replacement for Terminal that works on Macs with macOS 10.8 or newer.</li> <li>Oh-My-Zsh - Your terminal never felt this good before.</li> <li>SdkMan - The Software Development Kit Manager.</li> </ul>"},{"location":"#editors","title":"Editors","text":"<ul> <li>Visual Studio Code</li> <li>Atom</li> <li>Sublime Text</li> </ul>"},{"location":"#task-tracking-tools","title":"Task Tracking Tools","text":"<ul> <li>Asana</li> <li>EverNote</li> <li>Trello</li> </ul>"},{"location":"#utilities","title":"Utilities","text":"<ul> <li>Postman - REST Client</li> <li>Insomina - REST client</li> <li>Bitwarden - Password Manager</li> <li>SimpleMind - Mind Mapping tool</li> <li>GIF Brewery - Create GIFs</li> <li>Rambox - Messaging and emailing app that combines common web applications into one.</li> </ul>"},{"location":"#static-site-generators","title":"Static Site Generators","text":"<ul> <li>Hugo</li> <li>Jekyll</li> <li>MkDocs</li> </ul>"},{"location":"learning/","title":"Learning","text":""},{"location":"learning/#general-programming","title":"General Programming","text":"<ul> <li>Structure and Interpretation of Computer Programs</li> </ul>"},{"location":"learning/#data-structures-and-algorithms","title":"Data Structures and Algorithms","text":"<ul> <li>Algorithmic Thinking, Peak Finding Video</li> </ul>"},{"location":"learning/#basic-steps-to-learn-a-programming-language","title":"Basic Steps to learn a programming language","text":"<ol> <li>Introduction</li> <li>Installation</li> <li>Basics</li> <li>Data Structures</li> <li>File IO</li> <li>Exception Handling</li> <li>XML, JSON processing</li> <li>Working with SQL Databases</li> <li>Building Web Applications</li> <li>Building REST API</li> </ol>"},{"location":"shortcuts/","title":"Shortcuts","text":""},{"location":"shortcuts/#intellij-idea","title":"Intellij IDEA","text":"<ul> <li>Extend Selection: \u2325 + \u2191</li> <li>Shrink Selection: \u2325 + \u2193</li> <li>Show clipboard: \u2318 + \u21e7 + V</li> <li>Format Current File: \u2325 + \u2318 + L</li> <li>Organize Imports: \u2303 + \u2325 + O</li> <li>Expand/Collapse Method: \u2318 + +/-</li> <li>Expand/Collapse all Methods: \u2318 + \u21e7 + +/-</li> <li>Extract to variable: \u2318 + \u2325 + V</li> <li>Extract to method: \u2318 + \u2325 + M</li> <li>File Structure: \u2318 + F12</li> </ul>"},{"location":"shortcuts/#git-tips","title":"Git Tips","text":"<p>OhMyZsh Git CheatSheet</p>"},{"location":"shortcuts/#git-stash","title":"Git Stash","text":"<p><code>git status</code> <code>git stash</code> -&gt; only stash tracked files (indexed, modified files) <code>git stash pop</code></p> <p><code>git stash apply</code> -&gt; reapply the changes to your working copy and keep them in your stash</p> <p><code>git stash -u</code> -&gt; also stash your untracked files <code>git stash -a</code> -&gt; also stash your changes to ignored files</p> <p><code>git stash list</code> <code>git stash save \"add style to our site\"</code></p> <p>By default, <code>git stash pop</code> will re-apply the most recently created stash: stash@{0}</p> <p><code>git stash pop stash@{2}</code></p> <p><code>git stash branch branch-name stash@{1}</code></p> <p><code>git stash drop stash@{1}</code></p> <p><code>git stash clear</code></p> <p>http://sushihangover.github.io/iterm2-osx-jump-word-wise-left-and-right-in-navigation/</p>"},{"location":"shortcuts/#working-with-open-source","title":"Working with open source","text":"<pre><code>git clone https://github.com/sivaprasadreddy/spring-boot.git\ncd spring-boot\ngit remote add upstream https://github.com/spring-projects/spring-boot.git\ngit remote -v\ngit fetch upstream\ngit checkout master\ngit merge upstream/master\ngit push\n</code></pre>"},{"location":"shortcuts/#reset-to-upstream","title":"Reset to Upstream","text":"<ul> <li>Ensures current branch is master <code>$ git checkout master</code></li> <li>Pulls all new commits made to upstream/master <code>$ git pull upstream master</code></li> <li>To remove all your local changes to master <code>$ git reset --hard upstream/master</code></li> </ul>"},{"location":"devops/ansible/","title":"Installation","text":"<p>Instructions: http://docs.ansible.com/ansible/latest/intro_installation.html</p>"},{"location":"devops/ansible/#ubuntu","title":"Ubuntu","text":"<pre><code>sudo apt-get install software-properties-common\nsudo apt-add-repository ppa:ansible/ansible\nsudo apt-get update\nsudo apt-get install ansible\n</code></pre>"},{"location":"devops/ansible/#macos","title":"MacOS","text":"<pre><code>sudo easy_install pip\nsudo pip install ansible\n</code></pre>"},{"location":"devops/ansible/#getting-started","title":"Getting Started","text":"<p><code>ansible --version</code></p> <p>vagrant init ubuntu/bionic64</p> <p>vagrant up vagrant reload</p> <p>vagrant ssh vagrant ssh-config</p> <p>ssh vagrant@127.0.0.1 -p 2222 -i ./.vagrant/machines/default/virtualbox/private_key</p> <p>hosts file:</p> <p>testserver ansible_host=127.0.0.1 ansible_port=2222 ansible_user=vagrant ansible_private_key_file=.vagrant/machines/default/virtualbox/private_key</p> <p>ansible testserver -i hosts -m ping</p> <p>Ansible looks for an ansible.cfg file in the following places, in this order:</p> <ol> <li>File specified by the ANSIBLE_CONFIG environment variable </li> <li>./ansible.cfg (ansible.cfg in the current directory)</li> <li>~/.ansible.cfg (.ansible.cfg in your home directory)</li> <li>/etc/ansible/ansible.cfg</li> </ol> <p>ansible testserver -m command -a uptime ansible testserver -a uptime ansible testserver -a \"tail /var/log/dmesg\"</p>"},{"location":"devops/ansible/#to-become-root-b","title":"to become root -b","text":"<p>ansible testserver -b -a \"tail /var/log/syslog\"</p> <p>ansible testserver -b -m apt -a \"name=nginx update_cache=yes\" ansible testserver -b -m service -a \"name=nginx state=restarted\"</p>"},{"location":"devops/aws/","title":"AWS Notes","text":""},{"location":"devops/aws/#aws-cli-installation","title":"AWS CLI installation","text":"<ul> <li>Installation https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html</li> <li>Configure AWS CLI https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-quickstart.html</li> </ul> <pre><code>$ aws configure\nAWS Access Key ID [None]: YOUR_ACCESS_KEY_ID\nAWS Secret Access Key [None]: YOUR_SECRET_ACCESS_KEY\nDefault region name [None]: us-west-2\nDefault output format [None]: json\n</code></pre> <ul> <li>Create Named Profile: <code>aws configure --profile siva</code></li> </ul> <p>~/.aws/credentials (Linux &amp; Mac) or %USERPROFILE%.aws\\credentials (Windows)</p> <pre><code>[default]\naws_access_key_id=YOUR_ACCESS_KEY_ID\naws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n\n[siva]\naws_access_key_id=YOUR_ACCESS_KEY_ID\naws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n</code></pre> <p>~/.aws/config (Linux &amp; Mac) or %USERPROFILE%.aws\\config (Windows)</p> <pre><code>[default]\nregion=us-west-2\noutput=json\n\n[profile siva]\nregion=us-east-1\noutput=text\n</code></pre> <ul> <li> <p>Run commands using specific profile: <code>$ aws ec2 describe-instances --profile siva</code></p> </li> <li> <p>To use a named profile for multiple commands:</p> </li> </ul> <pre><code>$ export AWS_PROFILE=siva  //Linux or MacOS\nC:\\&gt; setx AWS_PROFILE siva //Windows\n</code></pre>"},{"location":"devops/aws/#simple-storage-service-s3","title":"Simple Storage Service (S3)","text":"<ul> <li> <p>Storage Classes</p> <ul> <li>Amazon S3 Standard (S3 Standard)</li> <li>Amazon S3 Intelligent-Tiering (S3 Intelligent-Tiering)</li> <li>Amazon S3 Standard-Infrequent Access (S3 Standard-IA)</li> <li>Amazon S3 One Zone-Infrequent Access (S3 One Zone-IA)</li> <li>Amazon S3 Glacier (S3 Glacier)</li> <li>Amazon S3 Glacier Deep Archive (S3 Glacier Deep Archive)</li> <li>S3 Outposts storage class</li> </ul> </li> <li> <p>Versioning</p> </li> <li> <p>Encryption</p> <ul> <li>Server Side Encryption SSE<ul> <li>SSE-S3/AES-256 (Amazon S3-Managed Keys)</li> <li>SSE-KMS (Customer Master Keys (CMKs) Stored in AWS Key Management Service (SSE-KMS))</li> <li>SSE-C (Customer-Provided Keys)</li> </ul> </li> <li>Client-Side Encryption</li> </ul> </li> <li> <p>CORS</p> </li> <li>Bucket Policies</li> </ul> <pre><code>{\n\"Id\": \"Policy1608432684713\",\n\"Version\": \"2012-10-17\",\n\"Statement\": [\n{\n\"Sid\": \"Stmt1608432681596\",\n\"Action\": [\n\"s3:GetObject\",\n\"s3:ListAllMyBuckets\",\n\"s3:ListBucket\",\n\"s3:PutObject\"\n],\n\"Effect\": \"Allow\",\n\"Resource\": \"arn:aws:s3:::bucket-name/*\",\n\"Principal\": \"*\"\n}\n]\n}\n</code></pre> <ul> <li>Life Cycle Rules</li> <li>Cross Region Replication</li> <li>AWS Policy Generator</li> </ul> <pre><code>$ aws s3 ls //list buckets\n$ aws s3 mb s3://sivalabs-000  //create bucket\n$ aws s3 lb s3://sivalabs-000  //list bucket contents\n$ aws s3 rb s3://sivalabs-000  //remove bucket\n$ aws s3 rb s3://sivalabs-000 --force //remove bucket force\n$ aws s3 rm s3://bucket-name/filename.txt \n$ aws s3 rm s3://bucket-name/folder1 --recursive \n$ aws s3 mv s3://bucket-name/example s3://my-bucket/   //moves all objects from s3://bucket-name/example to s3://my-bucket/\n$ aws s3 cp s3://bucket-name/example s3://my-bucket/\n$ aws s3 cp filename.txt s3://bucket-name\n$ aws s3 cp s3://bucket-name/filename.txt ./\n$ cat \"hello world\" | aws s3 cp - s3://bucket-name/filename.txt\n$ aws s3 cp s3://bucket-name/filename.txt -\nhello world\n$ aws s3 presign s3://sivalabs-000/images/pug.jpg --expire 300\n</code></pre>"},{"location":"devops/devops/","title":"DevOps","text":""},{"location":"devops/devops/#tools","title":"Tools","text":"<ul> <li>Docker</li> <li>Docker Compose</li> <li>Vagrant - Development Environments Made Easy</li> <li>Ansible - AUTOMATION FOR EVERYONE</li> <li>Jenkins - Build great things at any scale</li> <li>Jenkinx-X - Jenkins X is a CI/CD solution for modern cloud applications on Kubernetes</li> <li>Kubernetes - Automating deployment, scaling, and management of containerized applications.</li> <li>Helm - The package manager for Kubernetes</li> </ul>"},{"location":"devops/linux/","title":"Linux Commands","text":"<p>The default prompt for regular user is $ and for root user is #</p> <p>Ex: </p> <pre><code>[siva@siva-mint ~]$\n[siva@siva-mint ~]#\n</code></pre> <p>How to determine whether a given Linux is 32 bit or 64 bit?</p> <p><code>$ uname -m</code></p> <pre><code>x86_64 ==&gt; 64-bit kernel\ni686   ==&gt; 32-bit kernel\n</code></pre> <p>Show distribution info:</p> <p><code>$ uname -a</code></p> <pre><code>Linux localhost.localdomain 4.5.7-300.fc24.x86_64 #1 SMP Wed Jun 8 18:12:45 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre> <p>Getting Help on commands:</p> <pre><code>$ man pwd\n$ info pwd\n$ help pwd\n</code></pre> <p>Go to home to home directory: <code>$ cd ~</code></p> <p>How much time it took to execute the command: <code>$ time pwd</code></p> <p>To find out where a particular command is taken from:</p> <pre><code>$ type bash\nbash is /bin/bash\n</code></pre> <p>type command to check built-in or external command</p> <pre><code>$ type pwd\npwd is a shell builtin\n\n$ type bash\nbash is /bin/bash\n</code></pre> <p>To see the executed command history: <code>$ history</code></p> <p>To execute 23rd command: <code>$ !23</code></p> <p>To execute last command: <code>$ !!</code></p> <p>To edit history command by number, opens in VI: <code>$ fc 12</code></p> <p>To runs the most recent command that contains a particular string of characters: <code>$ !?string?</code></p> <p>To show current user:</p> <pre><code>$ who am i\nsiva     pts/0        2016-08-22 10:26 (192.168.56.1)\n</code></pre> <p><code>$ grep siva /etc/passwd</code></p> <pre><code>siva:x:1000:1000:Siva:/home/siva:/bin/bash\n</code></pre> <p><code>$ hostname</code>     siva-centos7</p> <p>ls command:</p> <pre><code>$ ls -al\n$ ls --help\n$ ls --hide=Desktop\n</code></pre> <p><code>$ date</code></p> <pre><code>Mon Aug 22 10:33:50 IST 2016\n</code></pre> <p><code>$ date +'%d/%m/%y'</code></p> <pre><code>22/08/16\n</code></pre> <p><code>$ date +'%A, %B %d, %Y'</code></p> <pre><code>Tuesday, October 21, 2014\n</code></pre> <p><code>date --help</code></p> <p><code>$ id</code></p> <pre><code>uid=1000(siva) gid=1000(siva) groups=1000(siva),10(wheel) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023\n</code></pre> <p>See which users logged into the system currently</p> <pre><code>$ who -uH\nNAME     LINE         TIME             IDLE          PID COMMENT\nsiva     :0           2016-08-22 10:11   ?          2575 (:0)\nsiva     tty2         2016-08-22 10:12 00:29        3443\nsiva     pts/0        2016-08-22 10:26   .          3935 (192.168.56.1)\n</code></pre> <p>List all aliases: <code>$ alias</code></p> <p>If a command is not in your PATH variable: <code>$ locate chage</code></p>"},{"location":"devops/linux/#terminal-shorcuts","title":"Terminal shorcuts","text":"<pre><code>Alt+F =&gt; Word forward Go forward one word.\nAlt+B =&gt; Word backward Go backward one word.\nCtrl+A =&gt; Beginning of line Go to the beginning of the current line.\nCtrl+E =&gt; End of line Go to the end of the line.\nCtrl+L =&gt; Clear screen Clear screen and leave line at the top of the screen.\n\nAlt+U =&gt; Uppercase word Change the current word to uppercase.\nAlt+L =&gt; Lowercase word Change the current word to lowercase.\nAlt+C =&gt; Capitalize word Change the current word to an initial capital\n</code></pre>"},{"location":"devops/linux/#alias","title":"Alias","text":"<pre><code>alias sai='sudo apt-get install'\nunalias sai\n</code></pre> <p>For all users</p> <pre><code>/etc/profile\n/etc/bashrc\n</code></pre> <p>User specific config files</p> <pre><code>~/.bash_profile\n~/.bashrc\n~/.bash_logout\n</code></pre> <p>To reload config file: <code>$ source ~/.bashrc</code></p>"},{"location":"devops/linux/#touch-command","title":"touch command","text":"<pre><code>$ touch memo{1,2,3,4,5}\n$ ls\nmemo1 memo2 memo3 memo4 memo5\n\n$ touch {John,Bill,Sally}-{Breakfast,Lunch,Dinner}\n$ ls\nBill-Breakfast Bill-Lunch John-Dinner Sally-Breakfast Sally-Lunch\nBill-Dinner John-Breakfast John-Lunch Sally-Dinner\n\n$ rm -f {John,Bill,Sally}-{Breakfast,Lunch,Dinner}\n\n$ touch {a..f}{1..5}\n$ ls\na1 a3 a5 b2 b4 c1 c3 c5 d2 d4 e1 e3 e5 f2 f4\na2 a4 b1 b3 b5 c2 c4 d1 d3 d5 e2 e4 f1 f3 f5\n</code></pre>"},{"location":"devops/linux/#ls-command","title":"ls command","text":"<pre><code>$ ls -l\ntotal 4\n-rw-rw-r--. 1 joe joe 0 Dec 18 13:38 apple\nlrwxrwxrwx. 1 joe joe 5 Dec 18 13:46 pointer_to_apple -&gt; apple\n-rwxr-xr-x. 1 joe joe 0 Dec 18 13:37 scriptx.sh\n</code></pre> <p>To show hidden and non-hidden files:: <code>$ ls -a</code></p> <p>To list all files by time most recently modified: <code>$ ls -at</code></p> <p>To list files and append file-type indicators: <code>$ ls -F</code></p> <p><code>$ ls --hide=g*</code></p> <p><code>$ ls -ld $HOME/test/</code></p> <p>To list all files and directories recursively from current directory down: <code>$ ls -R</code></p> <p>To list files by size: <code>$ ls -S</code></p>"},{"location":"devops/linux/#permissions","title":"Permissions","text":"<p>First character of permission:</p> <pre><code>hyphen (-) : a regular file\nd : a directory\nl ( lowercase L) : a symbolic link\nb (for a block device)\nc (for a character device)\ns (for a socket)\np (for a named pipe)\nx: an executable file (a script or binary file that runs as a command)\n</code></pre> <p>Changing permissions with chmod (numbers)</p> <p>each permission (read, write, and execute) is assigned a number</p> <p>r=4, w=2, and x=1</p> <p>For example, to make permissions wide open for yourself as owner,  you would set the first number to 7 (4+2+1), and then you would give the group and others read-only permission by setting both the second and third numbers to 4 (4+0+0), so that the final number is 744.</p> <pre><code># chmod 777 file -&gt; rwxrwxrwx\n# chmod 755 file -&gt; rwxr-xr-x\n# chmod 644 file -&gt; rw-r--r-\n# chmod 000 file -&gt; ---------\n</code></pre> <p>All files and directories below, and including, the myapps directory</p> <pre><code>$ chmod -R 755 $HOME/myapps\n</code></pre> <p>Changing permissions with chmod (letters)</p> <p>user (u), group (g), other (o),all users (a). read (r), write (w), and execute (x)</p> <p>Current : (rwxrwxrwx).</p> <pre><code>$ chmod a-w file -&gt; r-xr-xr-x\n$ chmod o-x file -&gt; rwxrwxrw-\n$ chmod go-rwx file -&gt; rwx------\n</code></pre> <p>Current: (---------).</p> <pre><code>$ chmod u+rw files -&gt; rw-------\n$ chmod a+x files -&gt; --x--x--x\n$ chmod ug+rx files -&gt; r-xr-x---\n$ chmod -R o-w $HOME/myapps\n</code></pre> <p>Changing file ownership</p> <pre><code># chown joe /home/joe/memo.txt\n# ls -l /home/joe/memo.txt\n-rw-r--r--. 1 joe root 0 Dec 19 11:23 /home/joe/memo.txt\n</code></pre> <p>To change group as well</p> <pre><code># chown joe:joe /home/joe/memo.txt\n# ls -l /home/joe/memo.txt\n-rw-r--r--. 1 joe joe 0 Dec 19 11:23 /home/joe/memo.txt\n\n# chown -R joe:joe /media/myusb\n</code></pre> <p>Moving, Copying, and Removing Files</p> <pre><code>$ mv abc def\n$ mv abc ~\n$ mv /home/joe/mymemos/ /home/joe/Documents/\n\n\n$ cp abc def\n$ cp abc ~\n$ cp -r /usr/share/doc/bash-completion* /tmp/a/\n$ cp -ra /usr/share/doc/bash-completion* /tmp/b/\n\n$ rm abc\n$ rm *\n$ rmdir /home/joe/nothing/\n$ rm -r /home/joe/bigdir/\n$ rm -rf /home/joe/hugedir/\n</code></pre> <p>The backslash causes any command to run unaliased.</p> <pre><code>\\rm bigdir\n</code></pre>"},{"location":"devops/linux/#vim","title":"VIM","text":"<pre><code>0 (zero) \u2014 Moves the cursor to the beginning of the current line.\n$ Moves the cursor to the end of the current line.\n\nZZ \u2014 Saves the current changes to the file and exits from vi.\n:w \u2014 Saves the current file but doesn't exit from vi.\n:wq \u2014 Works the same as ZZ.\n:q \u2014 Quits the current file. This works only if you don\u2019t have any unsaved changes.\n:q! \u2014 Quits the current file and doesn\u2019t save the changes you just made to the file.\n</code></pre> <p><code>$ locate .bashrc</code></p> <pre><code>/etc/skel/.bashrc\n/home/cnegus/.bashrc\n</code></pre> <p><code># locate .bashrc</code></p> <pre><code>/etc/skel/.bashrc\n/home/bill/.bashrc\n/home/joe/.bashrc\n/root/.bashrc\n</code></pre>"},{"location":"devops/linux/#find-command","title":"find command","text":"<p><code># find /etc -name passwd</code></p> <pre><code>/etc/pam.d/passwd\n/etc/passwd\n</code></pre> <p><code># find /etc -iname '*passwd*'</code></p> <pre><code>/etc/pam.d/passwd\n/etc/passwd-\n/etc/passwd.OLD\n/etc/passwd\n/etc/MYPASSWD\n/etc/security/opasswd\n</code></pre> <p>Finding files by size</p> <pre><code>$ find /usr/share/ -size +10M\n$ find /mostlybig -size -1M\n$ find /bigdata -size +500M -size -5G -exec du -sh {} \\;\n4.1G /bigdata/images/rhel6.img\n606M /bigdata/Fedora-16-i686-Live-Desktop.iso\n560M /bigdata/dance2.avi\n</code></pre> <p>Finding files by user</p> <pre><code>$ find /home -user chris -ls\n# find /home -user chris -or -user joe -ls\n# find /etc -group ntp -ls\n# find /var/spool -not -user root -ls\n</code></pre> <p>Finding files by permission</p> <pre><code>$ find /bin -perm 755 -ls\n$ find /home/chris/ -perm -222 -type d -ls\n$ find /myreadonly -perm +222 -type f\n$ find . -perm -002 -type f -ls\n</code></pre> <p>Finding files by date and time</p> <p>changed in past 10 minutes: <code>$ find /etc/ -mmin -10</code></p> <p>changed in the past three days: <code>$ find /bin /usr/bin /sbin /usr/sbin -ctime -3</code></p> <p>have not been accessed in more than 300 days: <code>$ find /var/ftp /var/www -atime +300</code></p> <p>The time options (-atime, -ctime, and -mtime)  based on the number of days</p> <p>The min options (-amin, -cmin, and -mmin) do the same in minutes.</p> <p>$ find /etc -iname iptables -exec echo \"I found {}\" \\;</p> <pre><code>I found /etc/bash_completion.d/iptables\nI found /etc/sysconfig/iptables\n</code></pre> <p>$ find /usr/share -size +5M -exec du {} \\; | sort -nr</p> <p>$ find /var/allusers/ -user joe -ok mv {} /tmp/joe/ \\;</p> <p>-ok asks for confirmation</p>"},{"location":"devops/linux/#grep-command","title":"grep command","text":"<pre><code>$ grep desktop /etc/services\n$ grep -i desktop /etc/services\n</code></pre> <p>To search for lines that don\u2019t contain a selected text string, use the -v option.</p> <pre><code>$ grep -vi tcp /etc/services\n</code></pre> <p>-r : recursively</p> <p>-l : list filenames only</p> <p>$ grep -rli peerdns /usr/share/doc/</p> <p>$ ip addr show | grep inet</p>"},{"location":"devops/linux/#ssh-password-less-login","title":"SSH Password-less login","text":"<ol> <li>Install OpenSSH on Server</li> </ol> <p>ex: sudo apt-get install openssh-server     sudo service ssh restart (or) sudo systemctl start ssh</p> <ol> <li>On client machine, generate ssh keys</li> </ol> <p>ssh-keygen -t rsa</p> <p>Copy public key (id_rsa.pub) from client machine to server's authorized_keys.</p> <p>ssh-copy-id @ <p>ssh-copy-id siva@192.168.0.103</p> <p>Now you can ssh without requiring to enter password:   ssh siva@192.168.0.103</p> <p>Note: Check configuration of SSH server in /etc/ssh/sshd_config file.</p>"},{"location":"devops/Docker/docker/","title":"Docker Commands","text":""},{"location":"devops/Docker/docker/#docker-basics","title":"Docker basics","text":"<p>Start a container in interactive attached mode: <code>docker run -i -t ubuntu:16.04 /bin/bash</code></p> <p>Detach from a container: <code>Ctrl + P Ctrl + Q</code></p> <p>Start a container in detached mode: <code>docker run -d ubuntu:16.04 /bin/bash</code></p> <p>View logs of a container: <code>docker logs ContainerId</code></p> <p>Start/Stop/Pause/Restart a container:</p> <ul> <li><code>docker start ContainerID</code></li> <li><code>docker stop ContainerID</code></li> <li><code>docker restart ContainerID</code></li> <li><code>docker pause ContainerID</code></li> <li><code>docker unpause ContainerID</code></li> </ul> <p>List running containers: <code>docker ps</code></p> <p>List all containers: <code>docker ps -a</code></p> <p>List only container ids: <code>docker ps -aq</code></p> <p>List container ids not running: <code>docker ps -aq -f status=exited</code></p> <p>Delete a container: <code>docker rm containerId</code></p> <p>Delete all stopped containers:</p> <ul> <li><code>docker rm $(docker ps -aq status=exited)</code></li> <li><code>docker container prune</code></li> </ul> <p>Automatically remove container once stopped: <code>docker run -i -t --rm ubuntu:16.04 /bin/bash</code></p> <p>Commit changes in a docker container: <code>docker commit ContainerID username/repository</code></p>"},{"location":"devops/Docker/docker/#create-docker-image","title":"Create Docker Image","text":"<p>Build an image using Dockerfile: <code>docker build -t sivaprasadreddy/myapp:1.0 .</code></p> <p>Build an image using different Dockerfile name: </p> <p><code>docker build -t busyboxplus:1.0 -f ./myfolder/MyDockerFile</code></p> <p>View layers of a container: <code>docker history ContainerId</code></p> <p>Sample Dockerfile</p> <pre><code># A basic apache server. To use either add or bind mount content under /var/www\nFROM ubuntu:12.04\n\nLABEL maintainer=\"siva@mail.com\"\n\nRUN apt-get update &amp;&amp; apt-get install -y apache2 &amp;&amp; \\ apt-get clean &amp;&amp; rm -rf /var/lib/apt/lists/*\n\nENV APACHE_RUN_USER www-data\nENV APACHE_RUN_GROUP www-data\nENV APACHE_LOG_DIR /var/log/apache2\n\nEXPOSE 80\n\nCMD [\"/usr/sbin/apache2\", \"-D\", \"FOREGROUND\"]\n</code></pre>"},{"location":"devops/Docker/docker/#docker-instructions","title":"Docker Instructions","text":"<p>FROM : The FROM instruction initializes a new build stage and sets the Base Image for subsequent instructions.</p> <p><code>FROM &lt;image&gt;[:&lt;tag&gt;|@&lt;digest&gt;]</code></p> <p><code>FROM ubuntu:latest</code></p> <p>COPY: The COPY instruction copies new files or directories from <code>&lt;src&gt;</code> and adds them to the filesystem of the container at the path <code>&lt;dest&gt;</code>.</p> <p><code>COPY &lt;src&gt; ... &lt;dst&gt;</code></p> <p><code>COPY html /var/www/html</code></p> <p><code>COPY httpd.conf magic /etc/httpd/conf/</code></p> <p>ADD: The ADD instruction copies new files, directories or remote file URLs from <code>&lt;src&gt;</code> and adds them to the filesystem of the image at the path <code>&lt;dest&gt;</code>.</p> <p><code>ADD &lt;src&gt; ... &lt;dst&gt;</code></p> <p><code>ADD web-page-config.tar /</code></p> <p>ENV: The ENV instruction sets the environment variable <code>&lt;key&gt;</code> to the value <code>&lt;value&gt;</code>.</p> <p><code>ENV &lt;key&gt; &lt;value&gt;</code></p> <p><code>ENV DEBUG_LVL 3</code></p> <p><code>ENV APACHE_LOG_DIR /var/log/apache</code></p> <p>WORKDIR : The WORKDIR instruction sets the working directory for any RUN, CMD, ENTRYPOINT, COPY and ADD instructions that follow it in the Dockerfile. If the WORKDIR doesn\u2019t exist, it will be created even if it\u2019s not used in any subsequent Dockerfile instruction.</p> <p><code>WORKDIR &lt;dirpath&gt;</code></p> <p><code>WORKDIR /var/log</code></p> <p>EXPOSE: The EXPOSE instruction informs Docker that the container listens on the specified network ports at runtime.</p> <p><code>EXPOSE &lt;port&gt;[/&lt;proto&gt;] [&lt;port&gt;[/&lt;proto&gt;]...]</code></p> <p><code>EXPOSE 8080 8787</code></p> <p>LABEL: The LABEL instruction adds metadata to an image. A LABEL is a key-value pair.</p> <p><code>LABEL &lt;key-1&gt;=&lt;val-1&gt; &lt;key-2&gt;=&lt;val-2&gt; ... &lt;key-n&gt;=&lt;val-n&gt;</code></p> <p><code>LABEL version=\"2.0\" release-date=\"2016-08-05\"</code></p> <p>RUN The <code>RUN</code> command executes during build time.</p> <p><code>RUN &lt;command&gt;</code> (or) <code>RUN [\"&lt;exec&gt;\", \"&lt;arg-1&gt;\", ..., \"&lt;arg-n&gt;\"]</code></p> <ul> <li><code>RUN echo \"echo Welcome to Docker!\" &gt;&gt; /root/.bashrc</code></li> <li><code>RUN [\"bash\", \"-c\", \"rm\", \"-rf\", \"/tmp/abc\"]</code></li> </ul> <p>CMD: The CMD is to provide defaults for an executing container and runs when container starts. There can only be one CMD instruction in a Dockerfile. If you list more than one CMD then only the last CMD will take effect.</p> <p><code>CMD &lt;command&gt;</code> (or) <code>CMD [\"&lt;exec&gt;\", \"&lt;arg-1&gt;\", ..., \"&lt;arg-n&gt;\"]</code> (or) <code>CMD [\"&lt;arg-1&gt;\", ..., \"&lt;arg-n&gt;\"]</code></p> <p>//Dockerfile to demonstrate the behavior of CMD</p> <pre><code>FROM busybox:latest\nMAINTAINER Siva &lt;sivaprasadreddy.k@gmail.com&gt;\nCMD [\"echo\", \"Dockerfile CMD demo\"]\n</code></pre> <p><code>&gt; docker build -t cmd-demo .</code></p> <p><code>&gt; sudo docker run cmd-demo</code></p> <p>Output : Dockerfile CMD demo</p> <p><code>&gt; sudo docker run cmd-demo echo Override CMD demo</code></p> <p>Output : Override CMD demo</p> <p>ENTRYPOINT: An ENTRYPOINT allows you to configure a container that will run as an executable.</p> <p><code>ENTRYPOINT &lt;command&gt;</code> (or) <code>ENTRYPOINT [\"&lt;exec&gt;\", \"&lt;arg-1&gt;\", ..., \"&lt;arg-n&gt;\"]</code></p> <p>Only the last ENTRYPOINT instruction will be effective.</p> <p>//Dockerfile to demonstrate the behavior of ENTRYPOINT</p> <pre><code>FROM busybox:latest\nENTRYPOINT [\"echo\", \"Dockerfile ENTRYPOINT demo\"]\n</code></pre> <p><code>&gt; sudo docker build -t entrypoint-demo .</code></p> <p><code>&gt; sudo docker run entrypoint-demo</code></p> <p>Output : Dockerfile ENTRYPOINT demo</p> <p><code>&gt; sudo docker run entrypoint-demo with additional arguments</code></p> <p>Output : Dockerfile ENTRYPOINT demo with additional arguments</p> <p><code>&gt; sudo docker run -it --entrypoint=\"/bin/sh\" entrypoint-demo</code></p> <p>Output : /#</p> <p>HEALTHCHECK: The <code>HEALTHCHECK</code> instruction tells Docker how to test a container to check that it is still working.</p> <p><code>HEALTHCHECK [&lt;options&gt;] CMD &lt;command&gt;</code></p> <p>Only the last HEALTHCHECK instruction will take effect.</p> <p><code>HEALTHCHECK --interval=5m --timeout=3s CMD curl -f http://localhost/ || exit 1</code></p> <p>Push image to DockerHub</p> <p><code>$ docker images -a</code></p> <p><code>$ docker login</code></p> <p>Username: sivaprasadreddy</p> <p>Password: my_password</p> <ul> <li><code>docker push sivaprasadreddy/myapp</code></li> </ul> <p>Delete Image</p> <ul> <li><code>docker rmi sivaprasadreddy/myapp</code></li> </ul>"},{"location":"devops/Docker/docker/#docker-cleanup","title":"Docker cleanup","text":"<p>Delete volumes</p> <ul> <li><code>docker volume rm $(docker volume ls -qf dangling=true)</code></li> <li><code>docker volume ls -qf dangling=true | xargs -r docker volume rm</code></li> </ul> <p>Delete networks</p> <ul> <li><code>docker network ls</code></li> <li><code>docker network ls | grep \"bridge\"</code></li> <li><code>docker network rm $(docker network ls | grep \"bridge\" | awk '/ / { print $1 }')</code></li> <li><code>docker network prune</code></li> </ul> <p>Remove docker images</p> <ul> <li><code>docker images</code></li> <li><code>docker rmi $(docker images -q)</code> //delete all images</li> <li><code>docker rmi $(docker images --filter \"dangling=true\" -q --no-trunc)</code></li> <li><code>docker images | grep \"none\"</code></li> <li><code>docker rmi $(docker images | grep \"none\" | awk '/ / { print $3 }')</code></li> </ul> <p>Remove docker containers</p> <ul> <li><code>docker ps -a</code></li> <li><code>docker kill $(docker ps -q)</code></li> <li><code>docker rm $(docker ps -qa --no-trunc --filter \"status=exited\")</code></li> </ul> <p>Docker System Prune</p> <pre><code>$ docker system prune -a\n\nWARNING! This will remove:\n    - all stopped containers\n    - all volumes not used by at least one container\n    - all networks not used by at least one container\n    - all images without at least one container associated to them\nAre you sure you want to continue? [y/N] y\n</code></pre> <p>Resize disk space for docker vm</p> <ul> <li><code>docker-machine create --driver virtualbox --virtualbox-disk-size \"40000\" default</code></li> </ul>"},{"location":"devops/Docker/docker_basics/","title":"Docker Basics","text":""},{"location":"devops/Docker/docker_basics/#docker-installation-on-linux-machine","title":"Docker Installation on Linux Machine","text":"<p><code>$ sudo yum update -y</code></p> <p><code>$ sudo yum install docker -y</code></p> <p><code>$ sudo service docker start (or) sudo systemctl start docker</code></p> <p><code>$ sudo systemctl enable docker</code></p> <p>Add ec2-user to docker group by executing below command.</p> <pre><code>$ sudo usermod -aG docker $USER\nExample:\n        $ sudo usermod -aG docker ec2-user\n</code></pre> <p>Close the terminal</p> <p><code>$ exit</code></p> <p>Execution below command to see docker status.</p> <p><code>$ docker info</code></p>"},{"location":"devops/Docker/docker_basics/#basic-docker-commands","title":"Basic Docker Commands","text":"<p>Display docker images available in our machine</p> <p><code>$ docker images</code></p> <p>Download docker image.</p> <pre><code>    $ docker pull &lt;image-name / image-id&gt;\n    Ex: \n        $ docker pull hello-world\n</code></pre> <p>Run docker image.</p> <pre><code>    $ docker run &lt;image-name / image-id&gt;\n    Ex: \n        $ docker run hello-world\n</code></pre> <p>Delete docker image.</p> <p><code>$ docker rmi &lt;image-name / image-id&gt;</code></p> <p>Display all running docker containers.</p> <p><code>$ docker ps</code></p> <p>Display all running and stopped containers.</p> <p><code>$ docker ps -a</code></p> <p>Delete docker container.</p> <p><code>$ docker rm &lt;container-id&gt;</code></p> <p>Delete docker image forcefully.</p> <p><code>$ docker rmi -f &lt;image-id&gt;</code></p> <p>Stop Docker container.</p> <p><code>$ docker stop &lt;container-id&gt;</code></p> <p>Delete all stopped containers and unused images and unused networks.</p> <p><code>$ docker system prune -a</code></p>"},{"location":"devops/Docker/docker_basics/#dockerfile","title":"Dockerfile","text":""},{"location":"devops/Docker/docker_basics/#from","title":"FROM","text":"<ul> <li>Specifies the base image to use for the Docker image.</li> <li>It defines the starting point of the image.</li> <li>On Top of base image our image will be created.</li> </ul> <pre><code>Syntax: FROM java:jdk-1.8\nFROM tomcat:9.5\nFROM mysql:6.8\nFROM python:3.3\n</code></pre>"},{"location":"devops/Docker/docker_basics/#mantainer","title":"MANTAINER","text":"<ul> <li><code>MAINTAINER</code> keyword is used to specify Dockerfile author information.</li> <li>keyword has been <code>deprecated in recent versions</code> of Docker. </li> <li>It is no longer recommended to use the <code>MAINTAINER</code> keyword in your Dockerfile.</li> <li>We can use the <code>LABEL</code> keyword instead.</li> </ul> <pre><code>    Syntax:\nMAINTAINER  Amrit &lt;amritcsadhikari@gmail.com&gt;\n</code></pre>"},{"location":"devops/Docker/docker_basics/#run","title":"RUN","text":""},{"location":"devops/Docker/docker_basics/#copy-or-add","title":"COPY (or) ADD","text":"<pre><code>- COPY command is used to copy the files from source to destination while creating docker image\n\nSyntax:\n    COPY &lt;source-location&gt;  &lt;destination-location&gt;\n\nEx: COPY  target/sbi-app.war   /app/tomcat/webapps/sbi-app.war\n</code></pre> <pre><code>- ADD command is also used to copy files from source to destination while creating docker image.\n\nSyntax:\nADD &lt;source-location&gt;  &lt;destination-location&gt;\nADD &lt;url&gt;  &lt;destination-location&gt;\n\nEx: ADD  &lt;URL&gt;   /app/tomcat/webapps/sbi-app.war\n</code></pre>"},{"location":"devops/Docker/docker_basics/#workdir","title":"WORKDIR","text":"<pre><code>- It is used to set working directory for an image / container.\n\nEx: WORKDIR     /app/\n\nNote: The Dockerfile instructions which are available after WORKDIR will be processed from given working directory.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#env","title":"ENV","text":"<pre><code>- ENV is used to set Environment Variables\n\nEx:\nENV &lt;key&gt; &lt;value&gt;\nENV   java   /etc/softwares/java\n</code></pre>"},{"location":"devops/Docker/docker_basics/#arg","title":"ARG","text":"<pre><code>- It is used to remove hard coded values.\n- Using ARG we can pass values in the BUILD TIME like below.\n\nEx:\n\nARG branch\nRUN git clone -b $branch &lt;repo-url&gt;\n# Now you Build Image using above Dockerfile\n$ docker build -t imageone --build-arg branch=master\n</code></pre>"},{"location":"devops/Docker/docker_basics/#user","title":"USER","text":"<pre><code>- We can set a user for creating image / container.\n\nNote: After USER instruction all the remaining commands will execute with given user permissions\n</code></pre>"},{"location":"devops/Docker/docker_basics/#expose","title":"EXPOSE","text":"<pre><code>- It is used to specify our container running PORT.\n\nEx: \nEXPOSE 8080\n\nNote: It is just like a documentation command to provide container running port number.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#cmd","title":"CMD","text":"<pre><code>- CMD instructions will execute while creating the container.\n- We cannot use this to execute multiple Commands.\n- If we define always last CMD is executed.\n- Using CMD command we can run our application package file jar / war file.\n\nExample\nCMD  sudo start tomcat\n\n\nNote: If we write multiple CMD instructions, also docker will process only the last CMD instruction. There is no use of writing multiple CMD instructions in one Dockerfile.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#entrypoint","title":"ENTRYPOINT","text":"<pre><code>- ENTRYPOINT instructions will execute while creating container.\n\nSyntax\nENTRYPOINT [ \"echo\"  , \"Hello WOrld!\" ]\n    ENTRYPOINT [  \"java\" , \"-jar\" , \"target/boot-app.jar\"]\n</code></pre>"},{"location":"devops/Docker/docker_basics/#volume","title":"VOLUME","text":"<pre><code>- VOLUME is used to specify docker container data storage location.\n\nNote: Volumes are used for storage.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#label","title":"LABEL","text":"<pre><code>Adds metadata to the Docker image. It is typically used for providing information about the maintainer, version, or other identifying details\n</code></pre>"},{"location":"devops/Docker/docker_basics/#interview-questions","title":"Interview Questions","text":""},{"location":"devops/Docker/docker_basics/#run-vs-cmd","title":"RUN VS CMD","text":"<pre><code>RUN is used to execute instructions while creating images.\nCMD is used to execute instructions while creating Container.\n</code></pre> <pre><code>We can write multiple RUN instructions in Dockerfile, docker will process all those instructions one by one.\nIf we write multiple CMD instructions in Dockerfile, docker will process only the last CMD instruction.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#copy-vs-add","title":"COPY VS ADD","text":"<pre><code>Using COPY command, we can just copy the files from one path to another path within the machine.\nUsing ADD command we can copy files from one path to another path and it supports source location as URL also.\n</code></pre> <pre><code>- RUN instructions will execute while creating the image.\n- Using RUN, we can give instructions to docker to execute commands.\n- We can write multiple RUN instructions, and the docker will process all the RUN instructions from top to bottom.\n\nExample\nRUN yum install maven\nRUN yum install git RUN git clone repo-url\nRUN mvn clean package\n</code></pre>"},{"location":"devops/Docker/docker_basics/#cmd-vs-entrypoint","title":"CMD VS ENTRYPOINT","text":"<pre><code>We can override CMD instructions in runtime while creating container.\nWe can't override ENTRYPOINT instructions.\n</code></pre>"},{"location":"devops/Docker/docker_basics/#detached-mode","title":"Detached Mode","text":"<p><code>$ docker run -d -p 8080:8080 sb-app</code></p>"},{"location":"devops/Docker/docker_basics/#list-runnig-processes-containers","title":"List Runnig Processes/ containers","text":"<p><code>$docker ps</code></p>"},{"location":"devops/Docker/docker_basics/#list-all-the-processes-containers-running-stopped","title":"List all the Processes/ containers (running /stopped)","text":"<p><code>$docker ps -a</code></p>"},{"location":"devops/Docker/docker_basics/#container-logs","title":"Container Logs","text":"<p><code>$docker logs &lt;container-id&gt;</code></p>"},{"location":"devops/Docker/docker_compose/","title":"Docker Compose","text":"<p>Docker compose YML file looks like:</p> <pre><code>version:\nservices:\nnetwork:\nvolumes:\n</code></pre> <p>Note: <code>docker-compose.yml</code> is the default filename.</p>"},{"location":"devops/Docker/docker_compose/#docker-compose-commands","title":"Docker Compose Commands","text":"<p>A.  Create Containers using Docker Compose. <code>$ docker-compose up -d</code></p> <p>B. Create Containers using Docker Compose with custom file name. <code>$ docker-compose -f &lt;filename&gt; up -d</code></p> <p>C. Display Containers created by Docker Compose. <code>$ docker-compose ps</code></p> <p>D. Display docker compose images. <code>$ docker-compose images</code></p> <p>E. restart the containers created by docker compose. <code>$ docker-compose restart</code></p> <p>F. Stop &amp; remove the containers created by docker compose. <code>$ docker-compose down</code></p>"},{"location":"devops/Docker/docker_compose/#docker-compose-in-linux","title":"Docker compose in Linux","text":"<ol> <li>download docker compose    <code>$ sudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose</code></li> <li>Allow Execution permission    <code>$ sudo chmod +x /usr/local/bin/docker-compose</code></li> <li>check docker compose is installed or not    <code>$ docker-compose --version</code></li> </ol> <pre><code>Example#1\nversion: '3'\n\nservices:\n  web:\n    image: nginx:latest\n    ports:\n      - 80:80\n\n  db:\n    image: mysql:latest\n    environment:\n      - MYSQL_ROOT_PASSWORD=secret\n</code></pre> <ul> <li>Save above file with \u201cdocker-compose.yml\u201d or any other name ex: setup.yml</li> </ul> <pre><code>$ docker-compose -f setup.yml -d\n$ docker-compose -f setup.yml images\n$ docker-compose -f setup.yml ps\n$ docker exec -it ec2-user-db-1 bash  (check container name)\n$ mysql -u root -p\n$ exit (2 times to come out of db and container)\n</code></pre>"},{"location":"devops/Docker/docker_compose/#docker-compose-with-spring-boot-mysql","title":"Docker-Compose with Spring boot + MySQL","text":"<ol> <li>Install git and maven    <code>$ sudo yum install git maven -y</code></li> <li>Clone GitHub Repository    <code>$ git clone https://github.com/javabyraghu/spring-boot-mysql-docker-compose.git</code></li> <li>Build Maven application</li> </ol> <pre><code>$ cd spring-boot-mysql-docker-compose\n$ mvn clean package\n</code></pre> <p>Create Docker image <code>$ docker build -t spring-boot-mysql-app .</code></p> <p>Run Docker Compose file <code>$ docker-compose up -d</code></p> <p>Test Application (Open PORT 8080 on Security Group) <code>http://EC2-PUBLIC-IP:8080</code></p> <p>Connect to Database container <code>docker exec -it &lt;db-container-name&gt; /bin/bash</code></p> <p>Login to database and check table data</p> <pre><code>$ mysql -u root -p\n$ show databases;\n$ use springdb ;\n$ show tables;\n$ select * from book;\n$ exit\n$ exit </code></pre>"},{"location":"devops/Docker/springbootdocker/","title":"Spring Boot Docker Example","text":"<pre><code>-   Spring Boot is an open-source java-based framework available in the market to develop applications quickly.\n-   Spring Boot is providing embedded server (internal server will be available, we no need to configure server for execution)\n-   Spring Boot application will be packaged as jar/war file  (mvn clean package goal will do that package)\n\nNote:  When we do maven package, project jar will be created in project target folder\n</code></pre> <p>To run spring boot applications, we just need to run  jar file like below:</p> <p><code>$  java -jar &lt;boot-app-jar-file&gt;</code></p> <pre><code>Dockerfile\n----------\n\nFROM openjdk:11\n\nCOPY target/spring-boot-docker-app.jar  /usr/app/\n\nWORKDIR /usr/app/\n\nENTRYPOINT [\"java\", \"-jar\", \"spring-boot-docker-app.jar\"]\n</code></pre> <p>Spring Boot App GitHub Repository URL : https://github.com/javabyraghu/spring-boot-docker-app.git</p> <ol> <li> <p>Install git client software <code>$ sudo yum install git -y</code></p> </li> <li> <p>Clone GitHub Repo <code>$ git clone https://github.com/javabyraghu/spring-boot-docker-app.git</code></p> </li> <li> <p>Navigating to project folder <code>$ cd spring-boot-docker-app</code></p> </li> <li> <p>Install maven software <code>$ sudo yum install maven -y</code></p> </li> <li> <p>execute maven goals <code>$ mvn clean package</code></p> </li> </ol> <pre><code>Note: After the package is successful, we can see project jar file in target folder.\n</code></pre> <p><code>STEP 6:</code> Create docker image <code>$ docker build -t sb-app .</code></p> <p><code>STEP 7:</code> Run docker image with port mapping <code>$ docker run -p 8080:8080 sb-app</code></p> <pre><code>Note: Enable 8080 port number in EC2 VM security group\n\nURL To Access Application :   http://ec2-vm-public-ip:8080/welcome/Raghu\n</code></pre> <p><code>STEP 8:</code> DETACHED MODE:</p> <pre><code>With the command our terminal will be blocked, we can't execute any other command.\nTo execute other commands, we need to type CTRL+C then the terminal will open for commands execution, but our container gets stopped.\n</code></pre> <p><code>$ docker run -p 8080:8080 sb-app</code></p> <pre><code>Note: To overcome the above problem we can pass '-d' to run container in detached mode.\nWhen we execute the command below it will run the container in detached mode, and it will open terminal for commands execution.\n</code></pre> <p><code>$ docker run -d -p 8080:8080 sb-app</code></p> <p><code>STEP 9:</code> Once the above command is executed, we can see running containers using the command below.</p> <p><code>$ docker ps</code></p> <p><code>STEP 10:</code> We can check logs of the container using below command.</p> <p><code>$ docker logs &lt;container-id&gt;</code></p>"},{"location":"devops/Linuxx/grep/","title":"Find Locate Search","text":""},{"location":"devops/Linuxx/grep/#global-regular-expression-print","title":"Global Regular Expression Print","text":"<p><code>grep</code> is used for searching a word in a file.</p> <pre><code>        grep -i 'Linux' *    (It will search for linux word in  all the files)\ngrep -i 'Linux' &lt;filename&gt;   (it will search for linux word in given filename - ignore case)\ngrep \u2013n \u2018Linux\u2019 &lt;filename&gt; (to show line number where it is found)\ngrep \u2013ni \u2018Linux\u2019 &lt;filename&gt; (to show line number where it is found with ignore case) -/same\ngrep \u2013in \u2018Linux\u2019 &lt;filename&gt; (to show line number where it is found with ignore case) -/same\ngrep \u2013n -i \u2018Linux\u2019 &lt;filename&gt; (to show line number where it is found with ignore case) -/same\ngrep -i \u2013n \u2018Linux\u2019 &lt;filename&gt; (to show line number where it is found with ignore case) -/same\n</code></pre> <p><code>wc(word count)</code>: it is used to count no.of lines, words and no.of characters of given file</p> <pre><code>    wc &lt;filename&gt;\n    wc -l &lt;filename&gt; - gives no of lines\n    wc -c &lt;filename&gt; - gives no of chars\n</code></pre> <p><code>cp</code>: for copy and paste</p> <pre><code>    cp &lt;oldfilename&gt; &lt;newfilename&gt;\n</code></pre> <p>Note: If we want to copy more than one file data then we should go for <code>cat</code> command</p> <pre><code>cat f1.txt f2.txt &gt; f3.txt\n</code></pre> <p><code>mv</code> : it is used for renaming &amp; moving</p> <pre><code>    mv  &lt;existing-file-name&gt;  &lt;new-file-name&gt;\n    mv  &lt;source&gt;  &lt;destination&gt;\n</code></pre>"},{"location":"devops/Linuxx/grep/#search-a-file-find-and-locate","title":"Search a file (Find and Locate)","text":"<p><code>find</code> command will perform serach operation in entire linux file system. This is slower. <code>locate</code> will perform search operation in locate database(internal db), so this requires updating db before search. - Faster.</p> <p><code>locate</code></p> <pre><code>sudo yum install locate -y\nsudo updatedb\nlocate &lt;filename&gt;\n</code></pre> <p><code>find</code> - mostly used</p> <pre><code>find &lt;where-to search&gt; &lt;search-options&gt;\nEx:\nfind &lt;dir&gt; -name filename (find a specific file)\nfind &lt;dir&gt; -iname filename (ignore case in filename)\nfind &lt;dir&gt; -type d -name dirname (find directories by name)\nfind &lt;dir&gt; -type f -name \u2018*.txt\u2019 (find files of specific extension)\nfind &lt;dir&gt; -type f -perm 775 (find files with specific permission type)\nfind &lt;dir&gt; -type f ! -perm 775 (find files which are not specific permission type)\nfind &lt;dir&gt; -type f -perm 777 -exec chmod 644 {} \\; (find files with permission levels and change permission level)\nfind &lt;dir&gt; -type f -name \u2018*.txt\u2019 -exec rm -I {} \\; (find and delete files of specific extension)\nfind &lt;dir&gt; -type f -empty (find all empty files in the directory)\nfind &lt;dir&gt; -type d -empty (find empty sub-directories within the directory)\nfind &lt;dir&gt; -type f -name \u2018.*\u2019 (finds all hidden files)\nfind &lt;dir&gt; -type f -perm u=x (finds all executable files)\nfind &lt;dir&gt; -type f -user username (finds all files to which username is owner)\nfind &lt;dir&gt; -type f -group groupname (finds all files to which groupname is owner)\nfind &lt;dir&gt; -mtime 5 (finds all files that were modified in last 5 days)\nfind &lt;dir&gt; -atime 2 (finds all files that were accessed by a user in last 2 days)\nfind / -type f -size +100M -exec rm -f {} \\; (finds and delete all files greater than 100 mb)\n</code></pre>"},{"location":"devops/Linuxx/linux2/","title":"Linux More","text":""},{"location":"devops/Linuxx/linux2/#linux-file-hierarchy","title":"Linux File Hierarchy","text":"<p>The Linux file system follows the Filesystem Hierarchy Standard (FHS).</p> <pre><code>/ : The root directory and the starting point of the file system.\n\n/bin : Contains essential system binaries such as ls, cat, cp, mv, etc.\n\n/boot : Contains the files required for booting the system, including the Linux kernel, initrd images, and boot loader configuration files.\n\n/dev : Contains device files, which are used to communicate with hardware devices.\n\n/etc : Contains system-wide configuration files such as network settings, user accounts, and system services.\n\n/home : Contains user home directories.\n\n/lib : Contains system libraries required by programs on the system.\n\n/mnt : Mount point for temporary file systems such as external hard drives, USB drives, etc.\n\n/opt : Contains optional software packages that are not part of the core system.\n\n/proc : Contains virtual files that provide information about the system's hardware and running processes.\n\n/root : Home directory for the root user.\n\n/sbin : Contains system binaries used for system administration tasks.\n\n/tmp : Directory for temporary files.\n\n/usr : Contains files related to user applications, including binaries, libraries, documentation, and source code.\n\n/var : Contains variable files such as log files, mail spools, and temporary files generated by system processes.\n</code></pre>"},{"location":"devops/Linuxx/linux2/#working-with-files-in-linux","title":"Working with files in Linux","text":"<p><code>$ touch &lt;filename&gt;</code> : Create Empty files.</p> <pre><code>    touch f1.txt\n    touch a.txt b.txt c.txt d.md\n</code></pre> <p><code>$ cat</code> : Create files with content and print file contents. (Overwrite/write/append)</p> <pre><code>    cat &gt; filename   : Create file with data   (ctrl + d to close the file)\n    cat &gt;&gt; filename  : Append data to existing file\n    cat  filename   : Print file content\n    cat filename1  &gt;  filename2  : Copy data from filename1 to filename 2\n    cat filename1 filename2 &gt; filename3  : Copy data from filename1 and filename2 to filename3.\n    cat  f1.txt f2.txt &gt; f3.txt  : Copy more than one file data into another file\n</code></pre> <p>NOTE:: If the file does not exists, <code>cat</code> command will create a file itself.</p> <p><code>$ tac</code> : The 'tac' command is the reverse of the 'cat' command. It is also known as 'cat' backward. It will display the file content in reverse order.</p> <pre><code>        tac &lt;filename&gt;\n</code></pre> <p><code>$ mv</code> : Move/Rename the files.</p> <pre><code>    mv current-name new-name\n</code></pre> <p><code>$ rm</code> : Remove the files.</p> <pre><code>    rm &lt;filename&gt;\n</code></pre> <p><code>$ rm*</code> : Remove all the files under a loacation at once. </p> <pre><code>    rm *\n</code></pre>"},{"location":"devops/Linuxx/linux2/#working-with-directories-in-linux","title":"Working with Directories in Linux","text":"<p><code>$mkdir</code> : it is used to create/make directory.</p> <p><code>$rmdir</code> : it is used to remove only empty directory.</p> <p><code>$rm -r  &lt;dirname&gt;</code> : It is used to delete non-empty directories.</p> <p><code>$rm -i  &lt;dirname&gt;</code> :  <code>-i</code> flag will ask for confirmation <code>yes or no ?</code> before deletion.</p> <p><code>$cd &lt;dirname&gt;</code>  : Change directory</p> <p><code>$cd ..</code>  : Come out from the directory</p> <p><code>$ls -l &lt;dirname&gt;</code> : list the content of given directory</p> <p><code>$cat &lt;filename&gt;</code>   : It will display all the data available in the file</p> <p><code>$head</code>  : It will display first 10 lines of the file  from top  (<code>10</code> is the default count)</p> <pre><code>        head  &lt;filename&gt;  (it will give first 10 lines of data)\n        head  -n  15 &lt;filename&gt;     (it will give first 15 lines of data)\n        head  -n  25 &lt;filename&gt;   (it will give first 25 lines of data)\n</code></pre> <p><code>$tail</code>   :  It will display last 10 lines of the file from bottom (10 is the default count)</p> <pre><code>            tail  &lt;filename&gt;   (it will give last 10 lines data)\n            tail -n 15 &lt;filename&gt;   (it will give last 15 lines data)\n            tail -n 25 &lt;filename&gt; (it will give last 25 lines data)\n\n            tail -n 50 &lt;filename&gt; (it will give last 50 lines data)\n            tail -n +50 &lt;filename&gt; (it will give data from 50th line to till last line)\n</code></pre> <p>NOTE:: To get latest data from file we need to use 'tail' command because lastest data will be appended at bottom</p>"},{"location":"devops/Linuxx/text_editor/","title":"vi : Visual Editor","text":"<p><code>vi &lt;filename&gt;</code> : It will open the file</p> <pre><code>1.  press 'i' to enter into 'insert' mode\n\n2.  press 'esc' to come out from insert mode\n\n3.  press ':wq' to save and quit the file\n\n4.  press ':q!' to close the file without saving\n</code></pre>"},{"location":"devops/Linuxx/text_editor/#nano","title":"nano","text":"<p>This might not be available in all linux machines.</p> <p><code>sudo yum install nano -y</code></p> <pre><code>ctrl + o  - save modified file data\n\nctrl + x - exit\n</code></pre>"},{"location":"golang/introduction/","title":"Go Tutorial","text":""},{"location":"golang/introduction/#installation","title":"Installation","text":"<p>We can go to https://golang.org/dl/ and download the binary depending on our Operating System and install it. Once installed run <code>go version</code> and you should be able to see the go version.</p> <pre><code>$ go version\ngo version go1.14.1 darwin/amd64\n$\n</code></pre> <p>Once go is installed set <code>GOPATH</code> environment variable. On MacOS by default it is set to <code>${user.home}/go</code>. We can also add <code>$GOPATH/bin</code> to our <code>PATH</code>.</p> <pre><code>$ export GOPATH=~/go\n$ export PATH=$PATH:$GOPATH/bin\n</code></pre>"},{"location":"golang/introduction/#quickstart","title":"Quickstart","text":""},{"location":"golang/introduction/#create-new-project","title":"Create New Project","text":"<p>Create a new project directory hello-go and cd into the directory:</p> <pre><code>$ mkdir hello-go &amp; cd hello-go\n</code></pre> <p>In hello-go directory create <code>hello.go</code> as follows:</p> <p>hello.go</p> <pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\nfmt.Println(\"Hello World!!!\")\n}\n</code></pre> <p>Now you can run the application using <code>go run hello.go</code> and build the application as executable binary using <code>go build</code> as follows:</p> <pre><code>hello-go&gt; go run hello.go\nHello World!!!\nhello-go&gt; go build\nhello-go&gt; ls\nhello hello.go\nhello-go&gt; ./hello\nHello World!!!\n</code></pre> <p>We can initialize the hello-go application as a module using <code>go mod init</code> command as follows:</p> <pre><code>hello-go&gt; go mod init github.com/sivaprasadreddy/hello-go\ngo: creating new go.mod: module github.com/sivaprasadreddy/hello-go\nhello-go&gt; cat go.mod\nmodule github.com/sivaprasadreddy/hello-go\n\ngo 1.14\nhello-go&gt;\n</code></pre> <p>We can install 3rd-party dependencies using <code>go get</code> command as follows:</p> <pre><code>hello-go&gt; go get -u github.com/mitchellh/go-homedir\nhello-go&gt; cat go.mod\nmodule github.com/sivaprasadreddy/hello-go\n\ngo 1.14\n\nrequire github.com/mitchellh/go-homedir v1.1.0 // indirect\nhello-go&gt;\n</code></pre> <p>We can use <code>homedir</code> module as follows:</p> <p>hello.go</p> <pre><code>package main\n\nimport (\n\"fmt\"\n\"github.com/mitchellh/go-homedir\"\n\"os\"\n)\n\nfunc main()  {\nfmt.Println(\"Hello World!!!\")\nhome, err := homedir.Dir()\nif err != nil {\nfmt.Println(\"Error: \", err)\nos.Exit(1)\n}\nfmt.Println(\"My Home directory: \", home)\n}\n</code></pre>"},{"location":"java/ecosystem/","title":"Java","text":"<p>Java is a popular general purpose programming language. </p>"},{"location":"java/ecosystem/#installation","title":"Installation","text":"<p>Easy way to install Java is using SDKMAN</p> <pre><code>$ curl -s \"https://get.sdkman.io\" | bash\n$ source \"$HOME/.sdkman/bin/sdkman-init.sh\"\n$ sdk version\n$ sdk list java\n$ sdk install java 11.0.2-open\n</code></pre>"},{"location":"java/ecosystem/#ides","title":"IDEs","text":"<ul> <li>Intellij IDEA</li> <li>Eclipse</li> <li>Spring Tool Suite</li> <li>NetBeans</li> </ul>"},{"location":"java/ecosystem/#java-libraries-and-tools","title":"Java Libraries and Tools","text":"<ul> <li>Lombok</li> <li>AutoValue</li> <li>Immutable objects</li> <li>Jasypt</li> <li>JJwt</li> <li>Jackson JSON</li> <li>Vavr</li> <li>FF4j</li> <li>Failsafe</li> <li>Retry4j</li> <li>Twitter4j</li> <li>JooQ</li> <li>FlexyPool</li> <li>Hibernate-Types</li> <li>Resilience4j</li> <li>Zalando/problem-spring-web</li> <li>SpringFox</li> </ul>"},{"location":"java/ecosystem/#testing","title":"Testing","text":"<ul> <li>JUnit 5 Docs</li> <li>REST Assured</li> <li>Mock Server</li> <li>TestContainers</li> <li>Mockito</li> <li>Assertj</li> <li>Awaitility</li> <li>Localstack</li> <li>Jacoco</li> <li>SonarQube</li> <li>SonarCloud</li> </ul>"},{"location":"java/ecosystem/#performace-testinng","title":"Performace Testinng","text":"<ul> <li>Gatling</li> <li>JMeter</li> </ul>"},{"location":"java/ecosystem/#database-migration","title":"Database Migration","text":"<ul> <li>Flyway DB Migration</li> <li>Liquibase</li> </ul>"},{"location":"java/ecosystem/#cicd","title":"CI/CD","text":"<ul> <li>Jenkins</li> <li>TravisCI</li> <li>CircleCI</li> </ul>"},{"location":"java/ecosystem/#monitoring","title":"Monitoring","text":"<ul> <li>Grafana</li> <li>Prometheus</li> <li>ELK Stack</li> </ul>"},{"location":"java/ecosystem/#references","title":"References","text":"<ul> <li>https://www.oracle.com/technetwork/java/javase/downloads/index.html</li> <li>https://www.reddit.com/r/java</li> </ul>"},{"location":"java/gradle/","title":"Gradle","text":"<p>Gradle is a powerful build tool.</p>"},{"location":"java/gradle/#installation","title":"Installation","text":"<p><code>sdk install gradle</code></p>"},{"location":"java/gradle/#references","title":"References","text":"<ul> <li>https://gradle.org/guides/#getting-started</li> <li>https://docs.gradle.org/current/userguide/userguide.html</li> </ul>"},{"location":"java/gradle/#execute-shell-commands","title":"Execute Shell commands","text":"<pre><code>//To run a shell script\ntask runMyScript(type:Exec) {\nworkingDir '.'\ncommandLine 'sh', './run.sh'\n}\n\n//To run a single command\ntask buildDockerImage(type:Exec) {\nexecutable \"sh\"\nargs \"-c\", \"docker build -t sivaprasadreddy/spring-boot-todolist .\"\n}\n\n//To run multiple commands\ntask runMultipleCommands() {\nexec {\nexecutable \"sh\"\nargs \"-c\", 'touch test2.txt'\n}\nexec {\nexecutable \"sh\"\nargs \"-c\", 'touch test3.txt'\n}\n}\n</code></pre>"},{"location":"java/maven/","title":"Maven","text":""},{"location":"java/maven/#install-artifacts-into-local-repository","title":"Install artifacts into local repository","text":"<p><code>mvn install:install-file -DgroupId=oracle -DartifactId=ojdbc14 -Dpackaging=jar -Dversion=1.0 -Dfile=ojdbc14.jar -DgeneratePom=true</code></p>"},{"location":"java/maven/#commonly-used-plugins","title":"Commonly used Plugins","text":""},{"location":"java/maven/#spring-boot-maven-plugin","title":"spring-boot-maven-plugin","text":"<p>https://docs.spring.io/spring-boot/docs/current/maven-plugin/index.html</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;2.1.3.RELEASE&lt;/version&gt;\n&lt;configuration&gt;\n&lt;mainClass&gt;${start-class}&lt;/mainClass&gt;\n&lt;classifier&gt;exec&lt;/classifier&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;goals&gt;\n&lt;goal&gt;repackage&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;goals&gt;\n&lt;goal&gt;build-info&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#kotlin-maven-plugin","title":"kotlin-maven-plugin","text":"<p>https://kotlinlang.org/docs/reference/using-maven.html</p> <pre><code>&lt;build&gt;\n&lt;plugins&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.jetbrains.kotlin&lt;/groupId&gt;\n&lt;artifactId&gt;kotlin-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;${kotlin.version}&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;compile&lt;/id&gt;\n&lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt;\n&lt;configuration&gt;\n&lt;sourceDirs&gt;\n&lt;sourceDir&gt;${project.basedir}/src/main/kotlin&lt;/sourceDir&gt;\n&lt;sourceDir&gt;${project.basedir}/src/main/java&lt;/sourceDir&gt;\n&lt;/sourceDirs&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;test-compile&lt;/id&gt;\n&lt;goals&gt; &lt;goal&gt;test-compile&lt;/goal&gt; &lt;/goals&gt;\n&lt;configuration&gt;\n&lt;sourceDirs&gt;\n&lt;sourceDir&gt;${project.basedir}/src/test/kotlin&lt;/sourceDir&gt;\n&lt;sourceDir&gt;${project.basedir}/src/test/java&lt;/sourceDir&gt;\n&lt;/sourceDirs&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-compiler-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.5.1&lt;/version&gt;\n&lt;executions&gt;\n&lt;!-- Replacing default-compile as it is treated specially by maven --&gt;\n&lt;execution&gt;\n&lt;id&gt;default-compile&lt;/id&gt;\n&lt;phase&gt;none&lt;/phase&gt;\n&lt;/execution&gt;\n&lt;!-- Replacing default-testCompile as it is treated specially by maven --&gt;\n&lt;execution&gt;\n&lt;id&gt;default-testCompile&lt;/id&gt;\n&lt;phase&gt;none&lt;/phase&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;java-compile&lt;/id&gt;\n&lt;phase&gt;compile&lt;/phase&gt;\n&lt;goals&gt; &lt;goal&gt;compile&lt;/goal&gt; &lt;/goals&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;java-test-compile&lt;/id&gt;\n&lt;phase&gt;test-compile&lt;/phase&gt;\n&lt;goals&gt; &lt;goal&gt;testCompile&lt;/goal&gt; &lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;/plugins&gt;\n&lt;/build&gt;\n</code></pre>"},{"location":"java/maven/#maven-surefire-plugin","title":"maven-surefire-plugin","text":"<p>https://maven.apache.org/surefire/maven-surefire-plugin/</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-surefire-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.0.0-M3&lt;/version&gt;\n&lt;configuration&gt;\n&lt;excludes&gt;\n&lt;exclude&gt;**/*IntegrationTest.class&lt;/exclude&gt;\n&lt;/excludes&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#maven-failsafe-plugin","title":"maven-failsafe-plugin","text":"<p>https://maven.apache.org/surefire/maven-failsafe-plugin/</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-failsafe-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.0.0-M3&lt;/version&gt;\n&lt;configuration&gt;\n&lt;includes&gt;\n&lt;include&gt;**/*IntegrationTest.class&lt;/include&gt;\n&lt;/includes&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#jacoco-maven-plugin","title":"jacoco-maven-plugin","text":"<p>https://www.eclemma.org/jacoco/trunk/doc/maven.html</p> <pre><code>&lt;project&gt;\n&lt;properties&gt;\n&lt;jacoco.destFile&gt;${project.build.directory}/coverage-reports/aggregate.exec&lt;/jacoco.destFile&gt;\n&lt;/properties&gt;\n\n&lt;plugin&gt;\n&lt;groupId&gt;org.jacoco&lt;/groupId&gt;\n&lt;artifactId&gt;jacoco-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.8.3&lt;/version&gt;\n&lt;configuration&gt;\n&lt;dataFile&gt;${project.build.directory}/coverage-reports/aggregate.exec&lt;/dataFile&gt;\n&lt;rules&gt;\n&lt;rule implementation=\"org.jacoco.maven.RuleConfiguration\"&gt;\n&lt;element&gt;BUNDLE&lt;/element&gt;\n&lt;limits&gt;\n&lt;limit implementation=\"org.jacoco.report.check.Limit\"&gt;\n&lt;counter&gt;COMPLEXITY&lt;/counter&gt;\n&lt;value&gt;COVEREDRATIO&lt;/value&gt;\n&lt;minimum&gt;0.40&lt;/minimum&gt;\n&lt;/limit&gt;\n&lt;/limits&gt;\n&lt;/rule&gt;\n&lt;/rules&gt;\n&lt;excludes&gt;\n&lt;exclude&gt;**/model/*&lt;/exclude&gt;\n&lt;exclude&gt;**/entity/*&lt;/exclude&gt;\n&lt;exclude&gt;**/config/*&lt;/exclude&gt;\n&lt;/excludes&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;default-prepare-agent&lt;/id&gt;\n&lt;goals&gt;\n&lt;goal&gt;prepare-agent&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;destFile&gt;${project.build.directory}/coverage-reports/jacoco-ut.exec&lt;/destFile&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;default-prepare-agent-integration&lt;/id&gt;\n&lt;goals&gt;\n&lt;goal&gt;prepare-agent-integration&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;destFile&gt;${project.build.directory}/coverage-reports/jacoco-it.exec&lt;/destFile&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;post-unit-test&lt;/id&gt;\n&lt;phase&gt;prepare-package&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;report&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;dataFile&gt;${project.build.directory}/coverage-reports/jacoco-ut.exec&lt;/dataFile&gt;\n&lt;outputDirectory&gt;${project.reporting.outputDirectory}/jacoco-ut&lt;/outputDirectory&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;post-integration-test&lt;/id&gt;\n&lt;phase&gt;post-integration-test&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;report&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;dataFile&gt;${project.build.directory}/coverage-reports/jacoco-it.exec&lt;/dataFile&gt;\n&lt;outputDirectory&gt;${project.reporting.outputDirectory}/jacoco-it&lt;/outputDirectory&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;merge-results&lt;/id&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;merge&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;fileSets&gt;\n&lt;fileSet&gt;\n&lt;directory&gt;${project.build.directory}/coverage-reports&lt;/directory&gt;\n&lt;includes&gt;\n&lt;include&gt;*.exec&lt;/include&gt;\n&lt;/includes&gt;\n&lt;/fileSet&gt;\n&lt;/fileSets&gt;\n&lt;destFile&gt;${project.build.directory}/coverage-reports/aggregate.exec&lt;/destFile&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;post-merge-report&lt;/id&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;report&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;dataFile&gt;${project.build.directory}/coverage-reports/aggregate.exec&lt;/dataFile&gt;\n&lt;outputDirectory&gt;${project.reporting.outputDirectory}/jacoco-aggregate&lt;/outputDirectory&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n\n&lt;execution&gt;\n&lt;id&gt;check&lt;/id&gt;\n&lt;goals&gt;\n&lt;goal&gt;check&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"java/maven/#dependency-check-maven","title":"dependency-check-maven","text":"<p>https://jeremylong.github.io/DependencyCheck/index.html</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.owasp&lt;/groupId&gt;\n&lt;artifactId&gt;dependency-check-maven&lt;/artifactId&gt;\n&lt;version&gt;3.3.2&lt;/version&gt;\n&lt;configuration&gt;\n&lt;failOnError&gt;false&lt;/failOnError&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;phase&gt;deploy&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;check&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#maven-dependency-versions-check-plugin","title":"maven-dependency-versions-check-plugin","text":"<p>https://github.com/ning/maven-dependency-versions-check-plugin</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;com.ning.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-dependency-versions-check-plugin&lt;/artifactId&gt;\n&lt;version&gt;2.0.4&lt;/version&gt;\n&lt;configuration&gt;\n&lt;skip&gt;false&lt;/skip&gt;\n&lt;failBuildInCaseOfConflict&gt;false&lt;/failBuildInCaseOfConflict&gt;\n&lt;warnIfMajorVersionIsHigher&gt;true&lt;/warnIfMajorVersionIsHigher&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;check&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#flyway-maven-plugin","title":"flyway-maven-plugin","text":"<p>https://flywaydb.org/documentation/maven/</p> <pre><code>&lt;project&gt;\n&lt;properties&gt;\n&lt;flyway.url&gt;jdbc:postgresql://localhost:5432/postgres&lt;/flyway.url&gt;\n&lt;flyway.user&gt;postgres&lt;/flyway.user&gt;\n&lt;flyway.password&gt;secret&lt;/flyway.password&gt;\n&lt;/properties&gt;\n\n&lt;plugin&gt;\n&lt;groupId&gt;org.flywaydb&lt;/groupId&gt;\n&lt;artifactId&gt;flyway-maven-plugin&lt;/artifactId&gt;\n&lt;configuration&gt;\n&lt;driver&gt;org.postgresql.Driver&lt;/driver&gt;\n&lt;url&gt;${flyway.url}&lt;/url&gt;\n&lt;user&gt;${flyway.user}&lt;/user&gt;\n&lt;password&gt;${flyway.password}&lt;/password&gt;\n&lt;schemas&gt;\n&lt;schema&gt;public&lt;/schema&gt;\n&lt;/schemas&gt;\n&lt;locations&gt;\n&lt;location&gt;classpath:/db/migration/postgresql&lt;/location&gt;\n&lt;/locations&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n&lt;/project&gt;\n</code></pre>"},{"location":"java/maven/#maven-antrun-plugin","title":"maven-antrun-plugin","text":"<p>http://maven.apache.org/plugins/maven-antrun-plugin/</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-antrun-plugin&lt;/artifactId&gt;\n&lt;version&gt;1.8&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;ktlint&lt;/id&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;configuration&gt;\n&lt;target name=\"ktlint\"&gt;\n&lt;java taskname=\"ktlint\" dir=\"${basedir}\" fork=\"true\" failonerror=\"false\"\nclasspathref=\"maven.plugin.classpath\" classname=\"com.github.shyiko.ktlint.Main\"&gt;\n&lt;arg value=\"src/**/*.kt\"/&gt;\n&lt;!-- to generate report in checkstyle format prepend following args: --&gt;\n\n&lt;arg value=\"--reporter=plain\"/&gt;\n&lt;arg value=\"--reporter=checkstyle,output=${project.build.directory}/ktlint.xml\"/&gt;\n\n&lt;!-- see https://github.com/shyiko/ktlint#usage for more --&gt;\n&lt;/java&gt;\n&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;goals&gt;&lt;goal&gt;run&lt;/goal&gt;&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;ktlint-format&lt;/id&gt;\n&lt;phase&gt;validate&lt;/phase&gt;\n&lt;configuration&gt;\n&lt;target name=\"ktlint\"&gt;\n&lt;java taskname=\"ktlint\" dir=\"${basedir}\" fork=\"true\" failonerror=\"false\"\nclasspathref=\"maven.plugin.classpath\" classname=\"com.github.shyiko.ktlint.Main\"&gt;\n&lt;arg value=\"-F\"/&gt;\n&lt;arg value=\"src/**/*.kt\"/&gt;\n&lt;/java&gt;\n&lt;/target&gt;\n&lt;/configuration&gt;\n&lt;goals&gt;&lt;goal&gt;run&lt;/goal&gt;&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;dependencies&gt;\n&lt;dependency&gt;\n&lt;groupId&gt;com.github.shyiko&lt;/groupId&gt;\n&lt;artifactId&gt;ktlint&lt;/artifactId&gt;\n&lt;version&gt;0.29.0&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- additional 3rd party ruleset(s) can be specified here --&gt;\n&lt;/dependencies&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#detekt-maven-plugin","title":"detekt-maven-plugin","text":"<p>https://github.com/Ozsie/detekt-maven-plugin</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;com.github.ozsie&lt;/groupId&gt;\n&lt;artifactId&gt;detekt-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;1.0.0.RC9.2&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;goals&gt;&lt;goal&gt;check&lt;/goal&gt;&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#maven-resources-plugin","title":"maven-resources-plugin","text":"<p>https://maven.apache.org/plugins/maven-resources-plugin/</p> <pre><code>&lt;plugin&gt;\n&lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;copy frontend content&lt;/id&gt;\n&lt;phase&gt;generate-resources&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;copy-resources&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;configuration&gt;\n&lt;outputDirectory&gt;${project.build.directory}/classes/static&lt;/outputDirectory&gt;\n&lt;overwrite&gt;true&lt;/overwrite&gt;\n&lt;resources&gt;\n&lt;resource&gt;\n&lt;directory&gt;${project.basedir}/../frontend/dist&lt;/directory&gt;\n&lt;includes&gt;\n&lt;include&gt;static/&lt;/include&gt;\n&lt;include&gt;index.html&lt;/include&gt;\n&lt;include&gt;favicon.ico&lt;/include&gt;\n&lt;/includes&gt;\n&lt;/resource&gt;\n&lt;/resources&gt;\n&lt;/configuration&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#sonar-maven-plugin","title":"Sonar Maven Plugin","text":"<p>https://docs.sonarqube.org/display/SCAN/Analyzing+with+SonarQube+Scanner+for+Maven</p> <pre><code>&lt;propject&gt;\n&lt;properties&gt;\n&lt;sonar.jdbc.url&gt;jdbc:mysql://localhost:3306/sonar&lt;/sonar.jdbc.url&gt;\n&lt;sonar.jdbc.username&gt;sonar&lt;/sonar.jdbc.username&gt;\n&lt;sonar.jdbc.password&gt;sonar&lt;/sonar.jdbc.password&gt;\n&lt;sonar.host.url&gt;http://localhost:9000&lt;/sonar.host.url&gt;\n&lt;sonar.host.url&gt;https://sonarcloud.io&lt;/sonar.host.url&gt;\n&lt;sonar.organization&gt;sivaprasadreddy-github&lt;/sonar.organization&gt;\n&lt;/properties&gt;\n\n&lt;plugin&gt;\n&lt;groupId&gt;org.sonarsource.scanner.maven&lt;/groupId&gt;\n&lt;artifactId&gt;sonar-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;3.5.0.1254&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;phase&gt;verify&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;sonar&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n&lt;/propject&gt;\n</code></pre> <p><code>mvn clean verify sonar:sonar</code></p>"},{"location":"java/maven/#docker-maven-plugin","title":"docker-maven-plugin","text":"<p>https://github.com/fabric8io/docker-maven-plugin</p> <pre><code>&lt;plugin&gt;\n&lt;groupId&gt;io.fabric8&lt;/groupId&gt;\n&lt;artifactId&gt;docker-maven-plugin&lt;/artifactId&gt;\n&lt;version&gt;0.24.0&lt;/version&gt;\n&lt;configuration&gt;\n&lt;logStdout&gt;true&lt;/logStdout&gt;\n&lt;images&gt;\n&lt;image&gt;\n&lt;name&gt;postgres:10.3&lt;/name&gt;\n&lt;alias&gt;postgresdb&lt;/alias&gt;\n&lt;run&gt;\n&lt;env&gt;\n&lt;POSTGRES_DB&gt;mydb&lt;/POSTGRES_DB&gt;\n&lt;POSTGRES_USER&gt;siva&lt;/POSTGRES_USER&gt;\n&lt;POSTGRES_PASSWORD&gt;secret&lt;/POSTGRES_PASSWORD&gt;\n&lt;/env&gt;\n&lt;ports&gt;\n&lt;port&gt;5432&lt;/port&gt;\n&lt;/ports&gt;\n&lt;wait&gt;\n&lt;log&gt;database system is ready to accept connections&lt;/log&gt;\n&lt;time&gt;30000&lt;/time&gt;\n&lt;/wait&gt;\n&lt;/run&gt;\n&lt;/image&gt;\n&lt;image&gt;\n&lt;name&gt;jamesdbloom/mockserver:mockserver-4.1.0&lt;/name&gt;\n&lt;alias&gt;mockserver&lt;/alias&gt;\n&lt;run&gt;\n&lt;ports&gt;\n&lt;port&gt;1080&lt;/port&gt;\n&lt;/ports&gt;\n&lt;wait&gt;\n&lt;log&gt;MockServer started&lt;/log&gt;\n&lt;time&gt;30000&lt;/time&gt;\n&lt;/wait&gt;\n&lt;/run&gt;\n&lt;/image&gt;\n&lt;/images&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;start-dependencies&lt;/id&gt;\n&lt;phase&gt;pre-integration-test&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;start&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;execution&gt;\n&lt;id&gt;stop-dependencies&lt;/id&gt;\n&lt;phase&gt;post-integration-test&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;stop&lt;/goal&gt;\n&lt;goal&gt;remove&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#git-commit-id-plugin","title":"git-commit-id-plugin","text":"<pre><code>&lt;plugin&gt;\n&lt;groupId&gt;pl.project13.maven&lt;/groupId&gt;\n&lt;artifactId&gt;git-commit-id-plugin&lt;/artifactId&gt;\n&lt;version&gt;2.2.2&lt;/version&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;goals&gt;\n&lt;goal&gt;revision&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;configuration&gt;\n&lt;dateFormat&gt;yyyy-MM-dd'T'HH:mm:ssZ&lt;/dateFormat&gt;\n&lt;generateGitPropertiesFile&gt;true&lt;/generateGitPropertiesFile&gt;\n&lt;/configuration&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#maven-javadoc-plugin","title":"maven-javadoc-plugin","text":"<pre><code>&lt;plugin&gt;\n&lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n&lt;artifactId&gt;maven-javadoc-plugin&lt;/artifactId&gt;\n&lt;configuration&gt;\n&lt;sourceFileExcludes&gt;\n&lt;exclude&gt;**/generated/**&lt;/exclude&gt;\n&lt;/sourceFileExcludes&gt;\n&lt;/configuration&gt;\n&lt;executions&gt;\n&lt;execution&gt;\n&lt;id&gt;attach-javadocs&lt;/id&gt;\n&lt;phase&gt;package&lt;/phase&gt;\n&lt;goals&gt;\n&lt;goal&gt;jar&lt;/goal&gt;\n&lt;/goals&gt;\n&lt;/execution&gt;\n&lt;/executions&gt;\n&lt;/plugin&gt;\n</code></pre>"},{"location":"java/maven/#maven-enforcer-plugin","title":"maven-enforcer-plugin","text":"<p>https://maven.apache.org/enforcer/maven-enforcer-plugin/</p>"},{"location":"java/maven/#maven-compiler-plugin","title":"maven-compiler-plugin","text":""},{"location":"java/maven/#protobuf-maven-plugin","title":"protobuf-maven-plugin","text":""},{"location":"java/maven/#build-helper-maven-plugin","title":"build-helper-maven-plugin","text":""},{"location":"java/maven/#properties-maven-plugin","title":"properties-maven-plugin","text":""},{"location":"java/maven/#jooq-codegen-maven","title":"jooq-codegen-maven","text":""},{"location":"java/maven/#maven-checkstyle-plugin","title":"maven-checkstyle-plugin","text":""},{"location":"java/maven/#exec-maven-plugin","title":"exec-maven-plugin","text":""},{"location":"kotlin/introduction/","title":"Kotlin","text":"<p>Kotlin is a JVM based programming language created by JetBrains.</p>"},{"location":"kotlin/introduction/#build-tool-configuration","title":"Build Tool Configuration","text":"<ul> <li>Configure Kotlin using Maven</li> <li>Configure Kotlin using Gradle</li> </ul>"},{"location":"kotlin/introduction/#librariesframeworks","title":"Libraries/Frameworks","text":"<ul> <li>Ktor</li> <li>MockK</li> </ul>"},{"location":"kotlin/introduction/#references","title":"References","text":"<ul> <li>https://kotlinlang.org/docs/reference/</li> <li>https://www.reddit.com/r/kotlin</li> <li>https://github.com/KotlinBy/awesome-kotlin</li> <li>http://www.kotlintoday.com/</li> </ul>"},{"location":"misc/clean-architecture/","title":"Thought on Clean Architecture","text":""},{"location":"misc/clean-architecture/#layered-architecture","title":"Layered architecture","text":"<ul> <li>What is Layered Architecture?</li> <li>Advantages<ul> <li>Simple, commonly used</li> </ul> </li> <li>Challenges<ul> <li>Chances of becoming tangled mess</li> <li>Not very explicit about code intention</li> </ul> </li> </ul>"},{"location":"misc/clean-architecture/#clean-architecture","title":"Clean Architecture","text":"<ul> <li>What is Clean Architecture?</li> <li>Advantages<ul> <li>More maintainable in the long run</li> <li>Ability to switch frameworks without changing core domain</li> </ul> </li> <li>Challenges<ul> <li>More code to write and maintain</li> <li>May not use frameworks features in easier way</li> </ul> </li> </ul>"},{"location":"misc/clean-architecture/#questions-to-ask-ourselves","title":"Questions to ask ourselves","text":"<ul> <li>Is clean architecture suitable for all type of applications?</li> <li>Is your application has heavy business logic?</li> <li>How many types of clients your application have?</li> <li>Do we need Framework independence?</li> </ul>"},{"location":"misc/clean-architecture/#my-preferred-approach-middle-ground","title":"My preferred approach (middle ground)","text":"<ul> <li>Package-by-feature instead of Package-by-layer</li> <li>Explicit configuration or framework magic</li> <li>Use-cases vs Services</li> <li>Domain model vs database model</li> <li>Domain logic vs Business rules</li> <li>Database entities and DTOs</li> </ul>"},{"location":"misc/clean-architecture/#references","title":"References","text":"<ul> <li>http://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html</li> <li>https://medium.freecodecamp.org/a-quick-introduction-to-clean-architecture-990c014448d2</li> <li>https://www.oreilly.com/ideas/software-architecture-patterns/page/2/layered-architecture</li> <li>https://towardsdatascience.com/software-architecture-patterns-98043af8028</li> <li>https://gist.github.com/ygrenzinger/14812a56b9221c9feca0b3621518635b</li> </ul>"},{"location":"python/installation/","title":"Installation","text":""},{"location":"python/introduction/","title":"Introduction","text":""},{"location":"ruby/introduction/","title":"Ruby Tutorial","text":""},{"location":"ruby/introduction/#installation","title":"Installation","text":""},{"location":"springboot/introduction/","title":"SpringBoot","text":""},{"location":"springboot/introduction/#references","title":"References","text":"<ul> <li>https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/</li> <li>https://github.com/spring-projects/spring-boot</li> <li>https://github.com/spring-io/start.spring.io</li> <li>https://github.com/spring-io/initializr</li> </ul>"},{"location":"typescript/introduction/","title":"TypeScript Tutorial","text":""},{"location":"typescript/introduction/#installation","title":"Installation:","text":"<p><code>npm install -g typescript</code></p>"},{"location":"typescript/introduction/#helloworld","title":"HelloWorld","text":"<p>hello.ts</p> <pre><code>function greeter(person) {\n    return \"Hello, \" + person;\n}\n\nlet user = \"Jane User\";\n\ndocument.body.textContent = greeter(user);\n</code></pre> <p>Compile : <code>tsc greeter.ts</code> </p> <pre><code>let hello = \"Hello!\";\nlet isDone: boolean = false;\nlet color: string = \"blue\";\nlet age: number = 37;\nlet sentence: string = `Hello, my name is ${ fullName }. I'll be ${ age + 1 } years old next month.`;\nlet list: number[] = [1, 2, 3];\nlet list: Array&lt;number&gt; = [1, 2, 3];\n\nconst numLivesForCat = 9;\n\nlet input = [1, 2];\nlet [first, second] = input;\n</code></pre>"}]}